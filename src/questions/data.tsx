import { Question } from '../types.ts';

export const ALL_QUESTIONS: Question[] = [
  {
    problem: 'Two Sum',
    pattern: 'array',
    link: 'two-sum',
    difficulty: 'easy',
    video: '',
    duration: 15,
  },
  {
    problem: 'Valid Parentheses',
    pattern: 'stack',
    link: 'valid-parentheses',
    difficulty: 'easy',
    video: '',
    duration: 20,
  },
  {
    problem: 'Merge Two Sorted Lists',
    pattern: 'linked-list',
    link: 'merge-two-sorted-lists',
    difficulty: 'easy',
    video: '',
    duration: 20,
  },
  {
    problem: 'Best Time to Buy and Sell Stock',
    pattern: 'array',
    link: 'best-time-to-buy-and-sell-stock',
    difficulty: 'easy',
    video: '',
    duration: 20,
  },
  {
    problem: 'Valid Palindrome',
    pattern: 'string',
    link: 'valid-palindrome',
    difficulty: 'easy',
    video: '',
    duration: 15,
  },
  {
    problem: 'Invert Binary Tree',
    pattern: 'binary-tree',
    link: 'invert-binary-tree',
    difficulty: 'easy',
    video: '',
    duration: 15,
  },
  {
    problem: 'Valid Anagram',
    pattern: 'string',
    link: 'valid-anagram',
    difficulty: 'easy',
    video: '',
    duration: 15,
  },
  {
    problem: 'Binary Search',
    pattern: 'binary-search',
    link: 'binary-search',
    difficulty: 'easy',
    video: '',
    duration: 15,
  },
  {
    problem: 'Flood Fill',
    pattern: 'graph',
    link: 'flood-fill',
    difficulty: 'easy',
    video: '',
    duration: 20,
  },
  {
    problem: 'Maximum Subarray',
    pattern: 'dynamic-programming',
    link: 'maximum-subarray',
    difficulty: 'medium',
    video: '',
    duration: 20,
  },
  {
    problem: 'Lowest Common Ancestor of a Binary Search Tree',
    pattern: 'binary-search-tree',
    link: 'lowest-common-ancestor-of-a-binary-search-tree',
    difficulty: 'easy',
    video: '',
    duration: 20,
  },
  {
    problem: 'Insert Interval',
    pattern: 'array',
    link: 'insert-interval',
    difficulty: 'medium',
    video: '',
    duration: 25,
  },
  {
    problem: '01 Matrix',
    pattern: 'graph',
    link: '01-matrix',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'K Closest Points to Origin',
    pattern: 'heap',
    link: 'k-closest-points-to-origin',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Balanced Binary Tree',
    pattern: 'binary-tree',
    link: 'balanced-binary-tree',
    difficulty: 'easy',
    video: '',
    duration: 15,
  },
  {
    problem: 'Linked List Cycle',
    pattern: 'linked-list',
    link: 'linked-list-cycle',
    difficulty: 'easy',
    video: '',
    duration: 20,
  },
  {
    problem: 'Implement Queue using Stacks',
    pattern: 'stack',
    link: 'implement-queue-using-stacks',
    difficulty: 'easy',
    video: '',
    duration: 20,
  },
  {
    problem: 'First Bad Version',
    pattern: 'binary-search',
    link: 'first-bad-version',
    difficulty: 'easy',
    video: '',
    duration: 20,
  },
  {
    problem: 'Ransom Note',
    pattern: 'hash-table',
    link: 'ransom-note',
    difficulty: 'easy',
    video: '',
    duration: 15,
  },
  {
    problem: 'Longest Substring Without Repeating Characters',
    pattern: 'string',
    link: 'longest-substring-without-repeating-characters',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: '3Sum',
    pattern: 'array',
    link: '3sum',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Binary Tree Level Order Traversal',
    pattern: 'binary-tree',
    link: 'binary-tree-level-order-traversal',
    difficulty: 'medium',
    video: '',
    duration: 20,
  },
  {
    problem: 'Clone Graph',
    pattern: 'graph',
    link: 'clone-graph',
    difficulty: 'medium',
    video: '',
    duration: 25,
  },
  {
    problem: 'Evaluate Reverse Polish Notation',
    pattern: 'stack',
    link: 'evaluate-reverse-polish-notation',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Course Schedule',
    pattern: 'graph',
    link: 'course-schedule',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Implement Trie (Prefix Tree)',
    pattern: 'trie',
    link: 'implement-trie-prefix-tree',
    difficulty: 'medium',
    video: '',
    duration: 35,
  },
  {
    problem: 'Coin Change',
    pattern: 'dynamic-programming',
    link: 'coin-change',
    difficulty: 'medium',
    video: '',
    duration: 25,
  },
  {
    problem: 'Product of Array Except Self',
    pattern: 'array',
    link: 'product-of-array-except-self',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Climbing Stairs',
    pattern: 'dynamic-programming',
    link: 'climbing-stairs',
    difficulty: 'easy',
    video: '',
    duration: 20,
  },
  {
    problem: 'Longest Palindrome',
    pattern: 'string',
    link: 'longest-palindrome',
    difficulty: 'easy',
    video: '',
    duration: 20,
  },
  {
    problem: 'Min Stack',
    pattern: 'stack',
    link: 'min-stack',
    difficulty: 'medium',
    video: '',
    duration: 20,
  },
  {
    problem: 'Reverse Linked List',
    pattern: 'linked-list',
    link: 'reverse-linked-list',
    difficulty: 'easy',
    video: '',
    duration: 20,
  },
  {
    problem: 'Validate Binary Search Tree',
    pattern: 'binary-search-tree',
    link: 'validate-binary-search-tree',
    difficulty: 'medium',
    video: '',
    duration: 20,
  },
  {
    problem: 'Number of Islands',
    pattern: 'graph',
    link: 'number-of-islands',
    difficulty: 'medium',
    video: '',
    duration: 25,
  },
  {
    problem: 'Rotting Oranges',
    pattern: 'graph',
    link: 'rotting-oranges',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Search in Rotated Sorted Array',
    pattern: 'binary-search',
    link: 'search-in-rotated-sorted-array',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Combination Sum',
    pattern: 'array',
    link: 'combination-sum',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Permutations',
    pattern: 'recursion',
    link: 'permutations',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Merge Intervals',
    pattern: 'array',
    link: 'merge-intervals',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Lowest Common Ancestor of a Binary Tree',
    pattern: 'binary-tree',
    link: 'lowest-common-ancestor-of-a-binary-tree',
    difficulty: 'medium',
    video: '',
    duration: 25,
  },
  {
    problem: 'Time Based Key-Value Store',
    pattern: 'binary-search',
    link: 'time-based-key-value-store',
    difficulty: 'medium',
    video: '',
    duration: 35,
  },
  {
    problem: 'Minimum Window Substring',
    pattern: 'string',
    link: 'minimum-window-substring',
    difficulty: 'hard',
    video: '',
    duration: 30,
  },
  {
    problem: 'Serialize and Deserialize Binary Tree',
    pattern: 'binary-tree',
    link: 'serialize-and-deserialize-binary-tree',
    difficulty: 'hard',
    video: '',
    duration: 40,
  },
  {
    problem: 'Trapping Rain Water',
    pattern: 'stack',
    link: 'trapping-rain-water',
    difficulty: 'hard',
    video: '',
    duration: 35,
  },
  {
    problem: 'Find Median from Data Stream',
    pattern: 'heap',
    link: 'find-median-from-data-stream',
    difficulty: 'hard',
    video: '',
    duration: 30,
  },
  {
    problem: 'Majority Element',
    pattern: 'array',
    link: 'majority-element',
    difficulty: 'easy',
    video: '',
    duration: 20,
  },
  {
    problem: 'Add Binary',
    pattern: 'binary',
    link: 'add-binary',
    difficulty: 'easy',
    video: '',
    duration: 15,
  },
  {
    problem: 'Diameter of Binary Tree',
    pattern: 'binary-tree',
    link: 'diameter-of-binary-tree',
    difficulty: 'easy',
    video: '',
    duration: 30,
  },
  {
    problem: 'Middle of the Linked List',
    pattern: 'linked-list',
    link: 'middle-of-the-linked-list',
    difficulty: 'easy',
    video: '',
    duration: 20,
  },
  {
    problem: 'Accounts Merge',
    pattern: 'graph',
    link: 'accounts-merge',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Sort Colors',
    pattern: 'array',
    link: 'sort-colors',
    difficulty: 'medium',
    video: '',
    duration: 25,
  },
  {
    problem: 'Word Break',
    pattern: 'trie',
    link: 'word-break',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Partition Equal Subset Sum',
    pattern: 'dynamic-programming',
    link: 'partition-equal-subset-sum',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'String to Integer (atoi)',
    pattern: 'string',
    link: 'string-to-integer-atoi',
    difficulty: 'medium',
    video: '',
    duration: 25,
  },
  {
    problem: 'Spiral Matrix',
    pattern: 'matrix',
    link: 'spiral-matrix',
    difficulty: 'medium',
    video: '',
    duration: 25,
  },
  {
    problem: 'Subsets',
    pattern: 'recursion',
    link: 'subsets',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Binary Tree Right Side View',
    pattern: 'binary-tree',
    link: 'binary-tree-right-side-view',
    difficulty: 'medium',
    video: '',
    duration: 20,
  },
  {
    problem: 'Longest Palindromic Substring',
    pattern: 'string',
    link: 'longest-palindromic-substring',
    difficulty: 'medium',
    video: '',
    duration: 25,
  },
  {
    problem: 'Word Ladder',
    pattern: 'graph',
    link: 'word-ladder',
    difficulty: 'hard',
    video: '',
    duration: 45,
  },
  {
    problem: 'Basic Calculator',
    pattern: 'stack',
    link: 'basic-calculator',
    difficulty: 'hard',
    video: '',
    duration: 40,
  },
  {
    problem: 'Maximum Profit in Job Scheduling',
    pattern: 'binary-search',
    link: 'maximum-profit-in-job-scheduling',
    difficulty: 'hard',
    video: '',
    duration: 45,
  },
  {
    problem: 'Merge k Sorted Lists',
    pattern: 'heap',
    link: 'merge-k-sorted-lists',
    difficulty: 'hard',
    video: '',
    duration: 30,
  },
  {
    problem: 'Largest Rectangle in Histogram',
    pattern: 'stack',
    link: 'largest-rectangle-in-histogram',
    difficulty: 'hard',
    video: '',
    duration: 35,
  },
  {
    problem: 'Maximum Depth of Binary Tree',
    pattern: 'binary-tree',
    link: 'maximum-depth-of-binary-tree',
    difficulty: 'easy',
    video: '',
    duration: 15,
  },
  {
    problem: 'Contains Duplicate',
    pattern: 'array',
    link: 'contains-duplicate',
    difficulty: 'easy',
    video: '',
    duration: 15,
  },
  {
    problem: 'Unique Paths',
    pattern: 'dynamic-programming',
    link: 'unique-paths',
    difficulty: 'medium',
    video: '',
    duration: 20,
  },
  {
    problem: 'Construct Binary Tree from Preorder and Inorder Traversal',
    pattern: 'binary-tree',
    link: 'construct-binary-tree-from-preorder-and-inorder-traversal',
    difficulty: 'medium',
    video: '',
    duration: 25,
  },
  {
    problem: 'Container With Most Water',
    pattern: 'array',
    link: 'container-with-most-water',
    difficulty: 'medium',
    video: '',
    duration: 35,
  },
  {
    problem: 'Letter Combinations of a Phone Number',
    pattern: 'recursion',
    link: 'letter-combinations-of-a-phone-number',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Word Search',
    pattern: 'graph',
    link: 'word-search',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Find All Anagrams in a String',
    pattern: 'string',
    link: 'find-all-anagrams-in-a-string',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Minimum Height Trees',
    pattern: 'graph',
    link: 'minimum-height-trees',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Task Scheduler',
    pattern: 'heap',
    link: 'task-scheduler',
    difficulty: 'medium',
    video: '',
    duration: 35,
  },
  {
    problem: 'LRU Cache',
    pattern: 'linked-list',
    link: 'lru-cache',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Kth Smallest Element in a BST',
    pattern: 'binary-search-tree',
    link: 'kth-smallest-element-in-a-bst',
    difficulty: 'medium',
    video: '',
    duration: 25,
  },
  {
    problem: 'Daily Temperatures',
    pattern: 'stack',
    link: 'daily-temperatures',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'House Robber',
    pattern: 'dynamic-programming',
    link: 'house-robber',
    difficulty: 'medium',
    video: '',
    duration: 25,
  },
  {
    problem: 'Meeting Rooms',
    pattern: 'array',
    link: 'meeting-rooms',
    difficulty: 'easy',
    video: '',
    duration: 20,
  },
  {
    problem: 'Roman to Integer',
    pattern: 'math',
    link: 'roman-to-integer',
    difficulty: 'easy',
    video: '',
    duration: 20,
  },
  {
    problem: 'Backspace String Compare',
    pattern: 'stack',
    link: 'backspace-string-compare',
    difficulty: 'easy',
    video: '',
    duration: 15,
  },
  {
    problem: 'Gas Station',
    pattern: 'array',
    link: 'gas-station',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Next Permutation',
    pattern: 'recursion',
    link: 'next-permutation',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Valid Sudoku',
    pattern: 'matrix',
    link: 'valid-sudoku',
    difficulty: 'medium',
    video: '',
    duration: 35,
  },
  {
    problem: 'Group Anagrams',
    pattern: 'string',
    link: 'group-anagrams',
    difficulty: 'medium',
    video: '',
    duration: 25,
  },
  {
    problem: 'Maximum Product Subarray',
    pattern: 'dynamic-programming',
    link: 'maximum-product-subarray',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Design Add and Search Words Data Structure',
    pattern: 'trie',
    link: 'design-add-and-search-words-data-structure',
    difficulty: 'medium',
    video: '',
    duration: 35,
  },
  {
    problem: 'Pacific Atlantic Water Flow',
    pattern: 'graph',
    link: 'pacific-atlantic-water-flow',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Remove Nth Node From End of List',
    pattern: 'linked-list',
    link: 'remove-nth-node-from-end-of-list',
    difficulty: 'medium',
    video: '',
    duration: 20,
  },
  {
    problem: 'Shortest Path to Get Food',
    pattern: 'graph',
    link: 'shortest-path-to-get-food',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Find the Duplicate Number',
    pattern: 'binary',
    link: 'find-the-duplicate-number',
    difficulty: 'medium',
    video: '',
    duration: 20,
  },
  {
    problem: 'Top K Frequent Words',
    pattern: 'heap',
    link: 'top-k-frequent-words',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Binary Tree Maximum Path Sum',
    pattern: 'binary-tree',
    link: 'binary-tree-maximum-path-sum',
    difficulty: 'hard',
    video: '',
    duration: 35,
  },
  {
    problem: 'Maximum Frequency Stack',
    pattern: 'stack',
    link: 'maximum-frequency-stack',
    difficulty: 'hard',
    video: '',
    duration: 40,
  },
  {
    problem: 'Counting Bits',
    pattern: 'binary',
    link: 'counting-bits',
    difficulty: 'easy',
    video: '',
    duration: 15,
  },
  {
    problem: 'Longest Increasing Subsequence',
    pattern: 'dynamic-programming',
    link: 'longest-increasing-subsequence',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Graph Valid Tree',
    pattern: 'graph',
    link: 'graph-valid-tree',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Course Schedule II',
    pattern: 'graph',
    link: 'course-schedule-ii',
    difficulty: 'medium',
    video: '',
    duration: 35,
  },
  {
    problem: 'Swap Nodes in Pairs',
    pattern: 'linked-list',
    link: 'swap-nodes-in-pairs',
    difficulty: 'medium',
    video: '',
    duration: 25,
  },
  {
    problem: 'Path Sum II',
    pattern: 'binary-tree',
    link: 'path-sum-ii',
    difficulty: 'medium',
    video: '',
    duration: 25,
  },
  {
    problem: 'Longest Consecutive Sequence',
    pattern: 'array',
    link: 'longest-consecutive-sequence',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Rotate Array',
    pattern: 'array',
    link: 'rotate-array',
    difficulty: 'medium',
    video: '',
    duration: 25,
  },
  {
    problem: 'Odd Even Linked List',
    pattern: 'linked-list',
    link: 'odd-even-linked-list',
    difficulty: 'medium',
    video: '',
    duration: 25,
  },
  {
    problem: 'Decode String',
    pattern: 'stack',
    link: 'decode-string',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Contiguous Array',
    pattern: 'array',
    link: 'contiguous-array',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Maximum Width of Binary Tree',
    pattern: 'binary-tree',
    link: 'maximum-width-of-binary-tree',
    difficulty: 'medium',
    video: '',
    duration: 20,
  },
  {
    problem: 'Find K Closest Elements',
    pattern: 'heap',
    link: 'find-k-closest-elements',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Longest Repeating Character Replacement',
    pattern: 'string',
    link: 'longest-repeating-character-replacement',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Median of Two Sorted Arrays',
    pattern: 'binary-search',
    link: 'median-of-two-sorted-arrays',
    difficulty: 'hard',
    video: '',
    duration: 40,
  },
  {
    problem: 'Same Tree',
    pattern: 'binary-tree',
    link: 'same-tree',
    difficulty: 'easy',
    video: '',
    duration: 20,
  },
  {
    problem: 'Number of 1 Bits',
    pattern: 'binary',
    link: 'number-of-1-bits',
    difficulty: 'easy',
    video: '',
    duration: 15,
  },
  {
    problem: 'Longest Common Prefix',
    pattern: 'string',
    link: 'longest-common-prefix',
    difficulty: 'easy',
    video: '',
    duration: 20,
  },
  {
    problem: 'Inorder Successor in BST',
    pattern: 'binary-search-tree',
    link: 'inorder-successor-in-bst',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Jump Game',
    pattern: 'dynamic-programming',
    link: 'jump-game',
    difficulty: 'medium',
    video: '',
    duration: 20,
  },
  {
    problem: 'Add Two Numbers',
    pattern: 'linked-list',
    link: 'add-two-numbers',
    difficulty: 'medium',
    video: '',
    duration: 25,
  },
  {
    problem: 'Generate Parentheses',
    pattern: 'recursion',
    link: 'generate-parentheses',
    difficulty: 'medium',
    video: '',
    duration: 25,
  },
  {
    problem: 'Sort List',
    pattern: 'linked-list',
    link: 'sort-list',
    difficulty: 'medium',
    video: '',
    duration: 25,
  },
  {
    problem: 'Number of Connected Components in an Undirected Graph',
    pattern: 'graph',
    link: 'number-of-connected-components-in-an-undirected-graph',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Minimum Knight Moves',
    pattern: 'graph',
    link: 'minimum-knight-moves',
    difficulty: 'medium',
    video: '',
    duration: 35,
  },
  {
    problem: 'Subarray Sum Equals K',
    pattern: 'array',
    link: 'subarray-sum-equals-k',
    difficulty: 'medium',
    video: '',
    duration: 35,
  },
  {
    problem: 'Asteroid Collision',
    pattern: 'stack',
    link: 'asteroid-collision',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Random Pick with Weight',
    pattern: 'math',
    link: 'random-pick-with-weight',
    difficulty: 'medium',
    video: '',
    duration: 25,
  },
  {
    problem: 'Kth Largest Element in an Array',
    pattern: 'heap',
    link: 'kth-largest-element-in-an-array',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Longest Increasing Path in a Matrix',
    pattern: 'graph',
    link: 'longest-increasing-path-in-a-matrix',
    difficulty: 'hard',
    video: '',
    duration: 40,
  },
  {
    problem: 'Longest Valid Parentheses',
    pattern: 'stack',
    link: 'longest-valid-parentheses',
    difficulty: 'hard',
    video: '',
    duration: 35,
  },
  {
    problem: 'Design In-Memory File System',
    pattern: 'trie',
    link: 'design-in-memory-file-system',
    difficulty: 'hard',
    video: '',
    duration: 40,
  },
  {
    problem: 'Employee Free Time',
    pattern: 'array',
    link: 'employee-free-time',
    difficulty: 'hard',
    video: '',
    duration: 35,
  },
  {
    problem: 'Single Number',
    pattern: 'binary',
    link: 'single-number',
    difficulty: 'easy',
    video: '',
    duration: 15,
  },
  {
    problem: 'Palindrome Linked List',
    pattern: 'linked-list',
    link: 'palindrome-linked-list',
    difficulty: 'easy',
    video: '',
    duration: 20,
  },
  {
    problem: 'Move Zeroes',
    pattern: 'array',
    link: 'move-zeroes',
    difficulty: 'easy',
    video: '',
    duration: 20,
  },
  {
    problem: 'Maximal Square',
    pattern: 'dynamic-programming',
    link: 'maximal-square',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Rotate Image',
    pattern: 'matrix',
    link: 'rotate-image',
    difficulty: 'medium',
    video: '',
    duration: 25,
  },
  {
    problem: 'Binary Tree Zigzag Level Order Traversal',
    pattern: 'binary-tree',
    link: 'binary-tree-zigzag-level-order-traversal',
    difficulty: 'medium',
    video: '',
    duration: 25,
  },
  {
    problem: 'Design Hit Counter',
    pattern: 'queue',
    link: 'design-hit-counter',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Path Sum III',
    pattern: 'binary-tree',
    link: 'path-sum-iii',
    difficulty: 'medium',
    video: '',
    duration: 35,
  },
  {
    problem: 'Pow(x, n)',
    pattern: 'math',
    link: 'powx-n',
    difficulty: 'medium',
    video: '',
    duration: 20,
  },
  {
    problem: 'Search a 2D Matrix',
    pattern: 'binary-search',
    link: 'search-a-2d-matrix',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Largest Number',
    pattern: 'string',
    link: 'largest-number',
    difficulty: 'medium',
    video: '',
    duration: 20,
  },
  {
    problem: 'Word Search II',
    pattern: 'graph',
    link: 'word-search-ii',
    difficulty: 'hard',
    video: '',
    duration: 40,
  },
  {
    problem: 'Alien Dictionary',
    pattern: 'graph',
    link: 'alien-dictionary',
    difficulty: 'hard',
    video: '',
    duration: 45,
  },
  {
    problem: 'Bus Routes',
    pattern: 'graph',
    link: 'bus-routes',
    difficulty: 'hard',
    video: '',
    duration: 45,
  },
  {
    problem: 'Symmetric Tree',
    pattern: 'binary-tree',
    link: 'symmetric-tree',
    difficulty: 'easy',
    video: '',
    duration: 20,
  },
  {
    problem: 'Missing Number',
    pattern: 'binary',
    link: 'missing-number',
    difficulty: 'easy',
    video: '',
    duration: 15,
  },
  {
    problem: 'Decode Ways',
    pattern: 'dynamic-programming',
    link: 'decode-ways',
    difficulty: 'medium',
    video: '',
    duration: 25,
  },
  {
    problem: 'Meeting Rooms II',
    pattern: 'array',
    link: 'meeting-rooms-ii',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Reverse Integer',
    pattern: 'math',
    link: 'reverse-integer',
    difficulty: 'medium',
    video: '',
    duration: 25,
  },
  {
    problem: 'Set Matrix Zeroes',
    pattern: 'matrix',
    link: 'set-matrix-zeroes',
    difficulty: 'medium',
    video: '',
    duration: 25,
  },
  {
    problem: 'Reorder List',
    pattern: 'linked-list',
    link: 'reorder-list',
    difficulty: 'medium',
    video: '',
    duration: 25,
  },
  {
    problem: 'Encode and Decode Strings',
    pattern: 'string',
    link: 'encode-and-decode-strings',
    difficulty: 'medium',
    video: '',
    duration: 25,
  },
  {
    problem: 'Cheapest Flights Within K Stops',
    pattern: 'graph',
    link: 'cheapest-flights-within-k-stops',
    difficulty: 'medium',
    video: '',
    duration: 45,
  },
  {
    problem: 'All Nodes Distance K in Binary Tree',
    pattern: 'binary-tree',
    link: 'all-nodes-distance-k-in-binary-tree',
    difficulty: 'medium',
    video: '',
    duration: 25,
  },
  {
    problem: 'Sliding Window Maximum',
    pattern: 'array',
    link: 'sliding-window-maximum',
    difficulty: 'hard',
    video: '',
    duration: 35,
  },
  {
    problem: 'Palindrome Number',
    pattern: 'math',
    link: 'palindrome-number',
    difficulty: 'easy',
    video: '',
    duration: 15,
  },
  {
    problem: 'Convert Sorted Array to Binary Search Tree',
    pattern: 'binary-search-tree',
    link: 'convert-sorted-array-to-binary-search-tree',
    difficulty: 'easy',
    video: '',
    duration: 20,
  },
  {
    problem: 'Reverse Bits',
    pattern: 'binary',
    link: 'reverse-bits',
    difficulty: 'easy',
    video: '',
    duration: 15,
  },
  {
    problem: 'Subtree of Another Tree',
    pattern: 'binary-tree',
    link: 'subtree-of-another-tree',
    difficulty: 'easy',
    video: '',
    duration: 20,
  },
  {
    problem: 'Squares of a Sorted Array',
    pattern: 'array',
    link: 'squares-of-a-sorted-array',
    difficulty: 'easy',
    video: '',
    duration: 20,
  },
  {
    problem: '3Sum Closest',
    pattern: 'array',
    link: '3sum-closest',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Rotate List',
    pattern: 'linked-list',
    link: 'rotate-list',
    difficulty: 'medium',
    video: '',
    duration: 25,
  },
  {
    problem: 'Find Minimum in Rotated Sorted Array',
    pattern: 'binary-search',
    link: 'find-minimum-in-rotated-sorted-array',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Basic Calculator II',
    pattern: 'stack',
    link: 'basic-calculator-ii',
    difficulty: 'medium',
    video: '',
    duration: 30,
  },
  {
    problem: 'Combination Sum IV',
    pattern: 'dynamic-programming',
    link: 'combination-sum-iv',
    difficulty: 'medium',
    video: '',
    duration: 35,
  },
  {
    problem: 'Insert Delete GetRandom O(1)',
    pattern: 'hash-table',
    link: 'insert-delete-getrandom-o1',
    difficulty: 'medium',
    video: '',
    duration: 20,
  },
  {
    problem: 'Non-overlapping Intervals',
    pattern: 'array',
    link: 'non-overlapping-intervals',
    difficulty: 'medium',
    video: '',
    duration: 20,
  },
  {
    problem: 'Palindrome Pairs',
    pattern: 'string',
    link: 'palindrome-pairs',
    difficulty: 'hard',
    video: '',
    duration: 40,
  },
  {
    problem: 'Reverse Nodes in k-Group',
    pattern: 'linked-list',
    link: 'reverse-nodes-in-k-group',
    difficulty: 'hard',
    video: '',
    duration: 35,
  },
  {
    problem: 'Sudoku Solver',
    pattern: 'matrix',
    link: 'sudoku-solver',
    difficulty: 'hard',
    video: '',
    duration: 40,
  },
  {
    problem: 'First Missing Positive',
    pattern: 'hash-table',
    link: 'first-missing-positive',
    difficulty: 'hard',
    video: '',
    duration: 35,
  },
  {
    problem: 'N-Queens',
    pattern: 'recursion',
    link: 'n-queens',
    difficulty: 'hard',
    video: '',
    duration: 40,
  },
  {
    problem: 'Smallest Range Covering Elements from K Lists',
    pattern: 'heap',
    link: 'smallest-range-covering-elements-from-k-lists',
    difficulty: 'hard',
    video: '',
    duration: 40,
  },
];
